/* In the css file we define the positions and styles of our elements in our html file.
Check out https://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048
*/

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: Arial;
}

#topbar {
  width: 400px;
  margin: 20px auto;
  text-align: center;
}

#topbar > input,
select,
button {
  border-radius: 5px;
  height: 30px;
  margin: 10px auto;
  text-align: center;
  border: 1px solid grey;
}
/* The difference between the standard X Y and X > Y is that the latter will only select direct children. There are performance benefits in using the child combinator. In fact, it's recommended particularly when working with JavaScript-based CSS selector engines. */

/* We create a "grid" in the result div, where we can display the gifs we get from our json object. */

#result {
  column-count: 5;
  margin: 5px;
  column-gap: 5px;
}

/* Now we define for all our image elements in the result div properties, which let the gif be displayed properly in the grid we defined before. The CSS object-fit property is used to specify how an <img> or <video> should be resized to fit its container. If we use object-fit: cover; it will cut off the sides of the image, preserving the aspect ratio, and also filling in the space. So we make sure it fits in our grid. */

#result img {
  border-radius: 5px;
  width: 100%;
  height: 200px;
  object-fit: cover;
  margin: 3px;
}

/* If you hover over an image element in the result div it displays a blue border */

#result img:hover {
  border: 7px solid #4778b1;
}

#pagination {
  display: none;
}

#pagination #selected {
  background-color: blue;
}

@media (max-width: 500px) {
  #result {
    column-count: 2;
  }
}
